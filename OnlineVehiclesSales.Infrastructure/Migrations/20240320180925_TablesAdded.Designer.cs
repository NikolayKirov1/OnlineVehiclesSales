// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineVehiclesSales.Infrastructure.Data;

#nullable disable

namespace OnlineVehiclesSales.Infrastructure.Migrations
{
    [DbContext(typeof(OnlineVehiclesSalesDbContext))]
    [Migration("20240320180925_TablesAdded")]
    partial class TablesAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("OnlineVehiclesSales.Infrastructure.Data.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Car identifier");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Brand of the car");

                    b.Property<string>("BuyerId")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("User id of the buyer of the car");

                    b.Property<int>("CarCategoryId")
                        .HasColumnType("int")
                        .HasComment("Category identifier of the car");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Color of the car");

                    b.Property<DateTime>("DateAd")
                        .HasColumnType("datetime2")
                        .HasComment("Date of the ad");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("Car description");

                    b.Property<int>("FuelId")
                        .HasColumnType("int")
                        .HasComment("Fuel identifier of the car");

                    b.Property<int>("GearsTypeId")
                        .HasColumnType("int")
                        .HasComment("Type of gears identifier of the car");

                    b.Property<int>("Horsepower")
                        .HasColumnType("int")
                        .HasComment("Horsepower of the car");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Car image url");

                    b.Property<int>("Mileage")
                        .HasColumnType("int")
                        .HasComment("Mileage of the car");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Model of the car");

                    b.Property<int>("Price")
                        .HasColumnType("int")
                        .HasComment("Price of the car");

                    b.Property<int>("SellerId")
                        .HasColumnType("int")
                        .HasComment("Seller identifier of the car");

                    b.Property<int>("Year")
                        .HasColumnType("int")
                        .HasComment("Year of manufacture of the car");

                    b.HasKey("Id");

                    b.HasIndex("CarCategoryId");

                    b.HasIndex("FuelId");

                    b.HasIndex("GearsTypeId");

                    b.HasIndex("SellerId");

                    b.ToTable("Cars");

                    b.HasComment("Car to sell");
                });

            modelBuilder.Entity("OnlineVehiclesSales.Infrastructure.Data.Models.CarCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Car category identifier");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Car category name");

                    b.HasKey("Id");

                    b.ToTable("CarCategories");

                    b.HasComment("Car category");
                });

            modelBuilder.Entity("OnlineVehiclesSales.Infrastructure.Data.Models.Fuel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Fuel identifier");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Fuel name");

                    b.HasKey("Id");

                    b.ToTable("Fuels");

                    b.HasComment("Type of fuel");
                });

            modelBuilder.Entity("OnlineVehiclesSales.Infrastructure.Data.Models.GearsType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Type identifier");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasComment("Name of type of gears");

                    b.HasKey("Id");

                    b.ToTable("GearsTypes");

                    b.HasComment("Type of gears");
                });

            modelBuilder.Entity("OnlineVehiclesSales.Infrastructure.Data.Models.Motorcycle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Motorcycle identifier");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Brand of the motorcycle");

                    b.Property<string>("BuyerId")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("User id of the buyer of the motorcycle");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Color of the motorcycle");

                    b.Property<DateTime>("DateAd")
                        .HasColumnType("datetime2")
                        .HasComment("Date of the ad");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("Motorcycle description");

                    b.Property<int>("FuelId")
                        .HasColumnType("int")
                        .HasComment("Fuel identifier of the motorcycle");

                    b.Property<int>("GearsTypeId")
                        .HasColumnType("int")
                        .HasComment("Type of gears identifier of the motorcycle");

                    b.Property<int>("Horsepower")
                        .HasColumnType("int")
                        .HasComment("Horsepower of the motorcycle");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Motorcycle image url");

                    b.Property<int>("Mileage")
                        .HasColumnType("int")
                        .HasComment("Mileage of the motorcycle");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Model of the motorcycle");

                    b.Property<int>("MotorcycleCategoryId")
                        .HasColumnType("int")
                        .HasComment("Category identifier of the motorcycle");

                    b.Property<int>("Price")
                        .HasColumnType("int")
                        .HasComment("Price of the motorcycle");

                    b.Property<int>("SellerId")
                        .HasColumnType("int")
                        .HasComment("Seller identifier of the motorcycle");

                    b.Property<int>("Year")
                        .HasColumnType("int")
                        .HasComment("Year of manufacture of the motorcycle");

                    b.HasKey("Id");

                    b.HasIndex("FuelId");

                    b.HasIndex("GearsTypeId");

                    b.HasIndex("MotorcycleCategoryId");

                    b.HasIndex("SellerId");

                    b.ToTable("Motorcycles");

                    b.HasComment("Motorcycle to sell");
                });

            modelBuilder.Entity("OnlineVehiclesSales.Infrastructure.Data.Models.MotorcycleCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Motorcycle category identifier");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Motorcycle category name");

                    b.HasKey("Id");

                    b.ToTable("MotorcycleCategories");

                    b.HasComment("Motorcycle category");
                });

            modelBuilder.Entity("OnlineVehiclesSales.Infrastructure.Data.Models.Seller", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Seller identifier");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasComment("Seller's phone");

                    b.Property<int>("TypeSellerId")
                        .HasColumnType("int")
                        .HasComment("Type identifier of the seller");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("User identifier");

                    b.HasKey("Id");

                    b.HasIndex("TypeSellerId");

                    b.HasIndex("UserId");

                    b.ToTable("Sellers");

                    b.HasComment("Vehicle seller");
                });

            modelBuilder.Entity("OnlineVehiclesSales.Infrastructure.Data.Models.Truck", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Truck identifier");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Brand of the truck");

                    b.Property<string>("BuyerId")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("User id of the buyer of the truck");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Color of the truck");

                    b.Property<DateTime>("DateAd")
                        .HasColumnType("datetime2")
                        .HasComment("Date of the ad");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("Truck description");

                    b.Property<int>("FuelId")
                        .HasColumnType("int")
                        .HasComment("Fuel identifier of the truck");

                    b.Property<int>("GearsTypeId")
                        .HasColumnType("int")
                        .HasComment("Type of gears identifier of the truck");

                    b.Property<int>("Horsepower")
                        .HasColumnType("int")
                        .HasComment("Horsepower of the truck");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Truck image url");

                    b.Property<int>("Mileage")
                        .HasColumnType("int")
                        .HasComment("Mileage of the truck");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Model of the truck");

                    b.Property<int>("Price")
                        .HasColumnType("int")
                        .HasComment("Price of the truck");

                    b.Property<int>("SellerId")
                        .HasColumnType("int")
                        .HasComment("Seller identifier of the truck");

                    b.Property<int>("TruckCategoryId")
                        .HasColumnType("int")
                        .HasComment("Category identifier of the truck");

                    b.Property<int>("Year")
                        .HasColumnType("int")
                        .HasComment("Year of manufacture of the truck");

                    b.HasKey("Id");

                    b.HasIndex("FuelId");

                    b.HasIndex("GearsTypeId");

                    b.HasIndex("SellerId");

                    b.HasIndex("TruckCategoryId");

                    b.ToTable("Trucks");

                    b.HasComment("Truck to sell");
                });

            modelBuilder.Entity("OnlineVehiclesSales.Infrastructure.Data.Models.TruckCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Truck category identifier");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Truck category name");

                    b.HasKey("Id");

                    b.ToTable("TruckCategories");

                    b.HasComment("Truck category");
                });

            modelBuilder.Entity("OnlineVehiclesSales.Infrastructure.Data.Models.TypeSeller", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Tipe seller identifier");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("Type seller name");

                    b.HasKey("Id");

                    b.ToTable("TypeSellers");

                    b.HasComment("Type seller");
                });

            modelBuilder.Entity("OnlineVehiclesSales.Infrastructure.Data.Models.Van", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Van identifier");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Brand of the van");

                    b.Property<string>("BuyerId")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("User id of the buyer of the van");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Color of the van");

                    b.Property<DateTime>("DateAd")
                        .HasColumnType("datetime2")
                        .HasComment("Date of the ad");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("Van description");

                    b.Property<int>("FuelId")
                        .HasColumnType("int")
                        .HasComment("Fuel identifier of the van");

                    b.Property<int>("GearsTypeId")
                        .HasColumnType("int")
                        .HasComment("Type of gears identifier of the van");

                    b.Property<int>("Horsepower")
                        .HasColumnType("int")
                        .HasComment("Horsepower of the van");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Van image url");

                    b.Property<int>("Mileage")
                        .HasColumnType("int")
                        .HasComment("Mileage of the van");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Model of the van");

                    b.Property<int>("Price")
                        .HasColumnType("int")
                        .HasComment("Price of the van");

                    b.Property<int>("SellerId")
                        .HasColumnType("int")
                        .HasComment("Seller identifier of the van");

                    b.Property<int>("VanCategoryId")
                        .HasColumnType("int")
                        .HasComment("Category identifier of the van");

                    b.Property<int>("Year")
                        .HasColumnType("int")
                        .HasComment("Year of manufacture of the van");

                    b.HasKey("Id");

                    b.HasIndex("FuelId");

                    b.HasIndex("GearsTypeId");

                    b.HasIndex("SellerId");

                    b.HasIndex("VanCategoryId");

                    b.ToTable("Vans");

                    b.HasComment("Van to sell");
                });

            modelBuilder.Entity("OnlineVehiclesSales.Infrastructure.Data.Models.VanCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Van category identifier");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Van category name");

                    b.HasKey("Id");

                    b.ToTable("VanCategories");

                    b.HasComment("Van category");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OnlineVehiclesSales.Infrastructure.Data.Models.Car", b =>
                {
                    b.HasOne("OnlineVehiclesSales.Infrastructure.Data.Models.CarCategory", "CarCategory")
                        .WithMany("Cars")
                        .HasForeignKey("CarCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineVehiclesSales.Infrastructure.Data.Models.Fuel", "Fuel")
                        .WithMany("Cars")
                        .HasForeignKey("FuelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineVehiclesSales.Infrastructure.Data.Models.GearsType", "GearsType")
                        .WithMany("Cars")
                        .HasForeignKey("GearsTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineVehiclesSales.Infrastructure.Data.Models.Seller", "Seller")
                        .WithMany("Cars")
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarCategory");

                    b.Navigation("Fuel");

                    b.Navigation("GearsType");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("OnlineVehiclesSales.Infrastructure.Data.Models.Motorcycle", b =>
                {
                    b.HasOne("OnlineVehiclesSales.Infrastructure.Data.Models.Fuel", "Fuel")
                        .WithMany("Motorcycles")
                        .HasForeignKey("FuelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineVehiclesSales.Infrastructure.Data.Models.GearsType", "GearsType")
                        .WithMany("Motorcycles")
                        .HasForeignKey("GearsTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineVehiclesSales.Infrastructure.Data.Models.MotorcycleCategory", "MotorcycleCategory")
                        .WithMany("Motorcycles")
                        .HasForeignKey("MotorcycleCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineVehiclesSales.Infrastructure.Data.Models.Seller", "Seller")
                        .WithMany("Motorcycles")
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fuel");

                    b.Navigation("GearsType");

                    b.Navigation("MotorcycleCategory");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("OnlineVehiclesSales.Infrastructure.Data.Models.Seller", b =>
                {
                    b.HasOne("OnlineVehiclesSales.Infrastructure.Data.Models.TypeSeller", "TypeSeller")
                        .WithMany("Sellers")
                        .HasForeignKey("TypeSellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypeSeller");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OnlineVehiclesSales.Infrastructure.Data.Models.Truck", b =>
                {
                    b.HasOne("OnlineVehiclesSales.Infrastructure.Data.Models.Fuel", "Fuel")
                        .WithMany("Trucks")
                        .HasForeignKey("FuelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineVehiclesSales.Infrastructure.Data.Models.GearsType", "GearsType")
                        .WithMany("Trucks")
                        .HasForeignKey("GearsTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineVehiclesSales.Infrastructure.Data.Models.Seller", "Seller")
                        .WithMany("Trucks")
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineVehiclesSales.Infrastructure.Data.Models.TruckCategory", "TruckCategory")
                        .WithMany("Trucks")
                        .HasForeignKey("TruckCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fuel");

                    b.Navigation("GearsType");

                    b.Navigation("Seller");

                    b.Navigation("TruckCategory");
                });

            modelBuilder.Entity("OnlineVehiclesSales.Infrastructure.Data.Models.Van", b =>
                {
                    b.HasOne("OnlineVehiclesSales.Infrastructure.Data.Models.Fuel", "Fuel")
                        .WithMany("Vans")
                        .HasForeignKey("FuelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineVehiclesSales.Infrastructure.Data.Models.GearsType", "GearsType")
                        .WithMany("Vans")
                        .HasForeignKey("GearsTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineVehiclesSales.Infrastructure.Data.Models.Seller", "Seller")
                        .WithMany("Vans")
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineVehiclesSales.Infrastructure.Data.Models.VanCategory", "VanCategory")
                        .WithMany("Vans")
                        .HasForeignKey("VanCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fuel");

                    b.Navigation("GearsType");

                    b.Navigation("Seller");

                    b.Navigation("VanCategory");
                });

            modelBuilder.Entity("OnlineVehiclesSales.Infrastructure.Data.Models.CarCategory", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("OnlineVehiclesSales.Infrastructure.Data.Models.Fuel", b =>
                {
                    b.Navigation("Cars");

                    b.Navigation("Motorcycles");

                    b.Navigation("Trucks");

                    b.Navigation("Vans");
                });

            modelBuilder.Entity("OnlineVehiclesSales.Infrastructure.Data.Models.GearsType", b =>
                {
                    b.Navigation("Cars");

                    b.Navigation("Motorcycles");

                    b.Navigation("Trucks");

                    b.Navigation("Vans");
                });

            modelBuilder.Entity("OnlineVehiclesSales.Infrastructure.Data.Models.MotorcycleCategory", b =>
                {
                    b.Navigation("Motorcycles");
                });

            modelBuilder.Entity("OnlineVehiclesSales.Infrastructure.Data.Models.Seller", b =>
                {
                    b.Navigation("Cars");

                    b.Navigation("Motorcycles");

                    b.Navigation("Trucks");

                    b.Navigation("Vans");
                });

            modelBuilder.Entity("OnlineVehiclesSales.Infrastructure.Data.Models.TruckCategory", b =>
                {
                    b.Navigation("Trucks");
                });

            modelBuilder.Entity("OnlineVehiclesSales.Infrastructure.Data.Models.TypeSeller", b =>
                {
                    b.Navigation("Sellers");
                });

            modelBuilder.Entity("OnlineVehiclesSales.Infrastructure.Data.Models.VanCategory", b =>
                {
                    b.Navigation("Vans");
                });
#pragma warning restore 612, 618
        }
    }
}
